#include <iostream>
#include <fstream>
#include <string>
#include <cstdlib>
#include <limits>

using namespace std;

struct Curso {
    string nombreCurso;
    string cicloCurso;
    string tipoCurso;
    string escuela;
};

struct Alumno {
    string nombre;
    string apellido;
    string direccion;
    string edad;
};

struct Escuela {
    Alumno alumnos[10];
    Curso cursos[10];
    int cantidadAlumnosActual = 0;
    int cantidadCursosActual = 0;
};

// Limpiar pantalla
void limpiarPantalla() {
    #ifdef _WIN32
        system("cls");
    #else
        system("clear");
    #endif
}

// Pausar ejecución
void pausar() {
    cout << "\nPresione ENTER para continuar...";
    cin.ignore(numeric_limits<streamsize>::max(), '\n');
    cin.get();
}

// Función para sobrescribir en un archivo
void escribirArchivo(const string& nombreArchivo, const string& texto) {
    ofstream archivo(nombreArchivo, ios::out);
    if (!archivo) {
        cout << "ERROR: el archivo no se pudo abrir\n";
        exit(1);
    }
    archivo << texto << endl;
    archivo.close();
}

// Función para leer un archivo
string leerArchivo(const string& nombreArchivo) {
    ifstream archivo(nombreArchivo, ios::in);
    if (!archivo) {
        cout << "ERROR: el archivo no se pudo abrir\n";
        exit(1);
    }

    string texto, linea;
    while (getline(archivo, linea)) {
        texto += linea + "\n";
    }

    archivo.close();
    return texto;
}

// Función para agregar texto a un archivo
void agregarArchivo(const string& nombreArchivo, const string& texto) {
    ofstream archivo(nombreArchivo, ios::app);
    if (!archivo) {
        cout << "ERROR: el archivo no se pudo abrir\n";
        exit(1);
    }
    archivo << texto << endl;
    archivo.close();
}

// Función para registrar un curso
Curso leerCurso() {
    Curso curso;
    cout << "Ingrese datos del curso a registrar\n";
    cout << "1. Nombre del curso: "; getline(cin, curso.nombreCurso);
    cout << "2. Ciclo del curso: "; getline(cin, curso.cicloCurso);
    cout << "3. Tipo de curso: "; getline(cin, curso.tipoCurso);
    cout << "4. Escuela del curso: "; getline(cin, curso.escuela);
    return curso;
}

// Función para mostrar los cursos
void mostrarCurso(const string& nombreArchivo) {
    cout << leerArchivo(nombreArchivo);
}

// Función para agregar cursos electivos
Curso agregarCursoElectivo(const string& nombreArchivo) {
    Curso curso;
    cout << "Ingrese datos del curso electivo\n";
    cout << "1. Nombre del curso: "; getline(cin, curso.nombreCurso);
    cout << "2. Ciclo del curso: "; getline(cin, curso.cicloCurso);
    curso.tipoCurso = "Electivo";
    cout << "3. Escuela del curso: "; getline(cin, curso.escuela);
    return curso;
}

// Función para registrar un alumno
Alumno leerAlumno() {
    Alumno alumno;
    cout << "Ingrese los datos del alumno a registrar\n";
    cout << "1. Nombre: "; getline(cin, alumno.nombre);
    cout << "2. Apellido: "; getline(cin, alumno.apellido);
    cout << "3. Dirección: "; getline(cin, alumno.direccion);
    cout << "4. Edad: "; getline(cin, alumno.edad);
    return alumno;
}

// Función para mostrar alumnos
void mostrarAlumno(const string& nombreArchivo) {
    cout << leerArchivo(nombreArchivo);
}

// Función principal con menú
int main() {
    string archivoCursos = "cursos.txt";
    string archivoAlumnos = "alumnos.txt";

    Escuela escuela;
    int opcion;

    do {
        limpiarPantalla();
        cout << "========================================\n";
        cout << "         SISTEMA DE GESTIÓN ESCOLAR     \n";
        cout << "========================================\n";
        cout << "1. Registrar cursos\n";
        cout << "2. Mostrar cursos\n";
        cout << "3. Agregar cursos electivos\n";
        cout << "4. Registrar alumnos\n";
        cout << "5. Mostrar alumnos\n";
        cout << "6. Salir\n";
        cout << "----------------------------------------\n";
        cout << "Seleccione una opción: ";
        cin >> opcion;
        cin.ignore(numeric_limits<streamsize>::max(), '\n');
        limpiarPantalla();

        switch (opcion) {
            case 1: {
                int cantidadCursos;
                cout << "REGISTRO DE CURSOS\n------------------\n";
                cout << "Cantidad de cursos a registrar: ";
                cin >> cantidadCursos;
                cin.ignore(numeric_limits<streamsize>::max(), '\n');

                for (int i = 0; i < cantidadCursos; i++) {
                    cout << "\nCurso " << (i + 1) << ":\n";
                    escuela.cursos[i] = leerCurso();
                }

                string texto = "";
                for (int i = 0; i < cantidadCursos; i++) {
                    texto += escuela.cursos[i].nombreCurso + "\t" +
                             escuela.cursos[i].cicloCurso + "\t" +
                             escuela.cursos[i].tipoCurso + "\t" +
                             escuela.cursos[i].escuela + "\n";
                }

                escribirArchivo(archivoCursos, texto);
                escuela.cantidadCursosActual += cantidadCursos;

                cout << "\nCursos registrados correctamente.\n";
                pausar();
                break;
            }
            case 2: {
                cout << "LISTA DE CURSOS\n--------------------------\n";
                cout << "Nombre\tCiclo\tTipo\tEscuela\n";
                mostrarCurso(archivoCursos);
                pausar();
                break;
            }
            case 3: {
                int cantCursosElectivos;
                cout << "AGREGAR CURSOS ELECTIVOS\n------------------------\n";
                cout << "Cantidad de cursos electivos: ";
                cin >> cantCursosElectivos;
                cin.ignore(numeric_limits<streamsize>::max(), '\n');

                for (int i = escuela.cantidadCursosActual; i < escuela.cantidadCursosActual + cantCursosElectivos; i++) {
                    cout << "\nCurso electivo " << (i - escuela.cantidadCursosActual + 1) << ":\n";
                    escuela.cursos[i] = agregarCursoElectivo(archivoCursos);
                }

                string texto = "";
                for (int i = escuela.cantidadCursosActual; i < escuela.cantidadCursosActual + cantCursosElectivos; i++) {
                    texto += escuela.cursos[i].nombreCurso + "\t" +
                             escuela.cursos[i].cicloCurso + "\t" +
                             escuela.cursos[i].tipoCurso + "\t" +
                             escuela.cursos[i].escuela + "\n";
                }

                agregarArchivo(archivoCursos, texto);
                escuela.cantidadCursosActual += cantCursosElectivos;

                cout << "\nCursos electivos agregados correctamente.\n";
                pausar();
                break;
            }
            case 4: {
                int cantidadAlumnos;
                cout << "REGISTRO DE ALUMNOS\n-------------------\n";
                cout << "Cantidad de alumnos a registrar: ";
                cin >> cantidadAlumnos;
                cin.ignore(numeric_limits<streamsize>::max(), '\n');

                for (int i = 0; i < cantidadAlumnos; i++) {
                    cout << "\nAlumno " << (i + 1) << ":\n";
                    escuela.alumnos[i] = leerAlumno();
                }

                string texto = "";
                for (int i = escuela.cantidadAlumnosActual; i < escuela.cantidadAlumnosActual + cantidadAlumnos; i++) {
                    texto += escuela.alumnos[i].nombre + "\t" +
                             escuela.alumnos[i].apellido + "\t" +
                             escuela.alumnos[i].direccion + "\t" +
                             escuela.alumnos[i].edad + "\n";
                }

                escribirArchivo(archivoAlumnos, texto);
                escuela.cantidadAlumnosActual += cantidadAlumnos;

                cout << "\nAlumnos registrados correctamente.\n";
                pausar();
                break;
            }
            case 5: {
                cout << "LISTA DE ALUMNOS\n--------------------------\n";
                cout << "Nombre\tApellido\tDirección\tEdad\n";
                mostrarAlumno(archivoAlumnos);
                pausar();
                break;
            }
            case 6:
                cout << "Saliendo del programa...\n";
                break;
            default:
                cout << "Opción no válida. Intente de nuevo.\n";
                pausar();
        }

    } while (opcion != 6);

    return 0;
}

